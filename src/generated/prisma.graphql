# source: http://localhost:4466/the-bid-auctions/local
# timestamp: Thu May 10 2018 16:07:00 GMT-0400 (EDT)

type AggregateAuction {
  count: Int!
}

type Auction implements Node {
  id: ID!
  createdAt: DateTime!
  name: String!
  ownerId: String!
  playerIds: [ID!]
}

"""A connection to a list of items."""
type AuctionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuctionEdge]!
  aggregate: AggregateAuction!
}

input AuctionCreateInput {
  name: String!
  ownerId: String!
  playerIds: AuctionCreateplayerIdsInput
}

input AuctionCreateplayerIdsInput {
  set: [ID!]
}

"""An edge in a connection."""
type AuctionEdge {
  """The item at the end of the edge."""
  node: Auction!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AuctionOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  name_ASC
  name_DESC
  ownerId_ASC
  ownerId_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AuctionPreviousValues {
  id: ID!
  createdAt: DateTime!
  name: String!
  ownerId: String!
  playerIds: [ID!]
}

type AuctionSubscriptionPayload {
  mutation: MutationType!
  node: Auction
  updatedFields: [String!]
  previousValues: AuctionPreviousValues
}

input AuctionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuctionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuctionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuctionSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AuctionWhereInput
}

input AuctionUpdateInput {
  name: String
  ownerId: String
  playerIds: AuctionUpdateplayerIdsInput
}

input AuctionUpdateplayerIdsInput {
  set: [ID!]
}

input AuctionWhereInput {
  """Logical AND on all given filters."""
  AND: [AuctionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AuctionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AuctionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  ownerId: String

  """All values that are not equal to given value."""
  ownerId_not: String

  """All values that are contained in given list."""
  ownerId_in: [String!]

  """All values that are not contained in given list."""
  ownerId_not_in: [String!]

  """All values less than the given value."""
  ownerId_lt: String

  """All values less than or equal the given value."""
  ownerId_lte: String

  """All values greater than the given value."""
  ownerId_gt: String

  """All values greater than or equal the given value."""
  ownerId_gte: String

  """All values containing the given string."""
  ownerId_contains: String

  """All values not containing the given string."""
  ownerId_not_contains: String

  """All values starting with the given string."""
  ownerId_starts_with: String

  """All values not starting with the given string."""
  ownerId_not_starts_with: String

  """All values ending with the given string."""
  ownerId_ends_with: String

  """All values not ending with the given string."""
  ownerId_not_ends_with: String
}

input AuctionWhereUniqueInput {
  id: ID
  name: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createAuction(data: AuctionCreateInput!): Auction!
  updateAuction(data: AuctionUpdateInput!, where: AuctionWhereUniqueInput!): Auction
  deleteAuction(where: AuctionWhereUniqueInput!): Auction
  upsertAuction(where: AuctionWhereUniqueInput!, create: AuctionCreateInput!, update: AuctionUpdateInput!): Auction!
  updateManyAuctions(data: AuctionUpdateInput!, where: AuctionWhereInput): BatchPayload!
  deleteManyAuctions(where: AuctionWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  auctions(where: AuctionWhereInput, orderBy: AuctionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Auction]!
  auction(where: AuctionWhereUniqueInput!): Auction
  auctionsConnection(where: AuctionWhereInput, orderBy: AuctionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AuctionConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  auction(where: AuctionSubscriptionWhereInput): AuctionSubscriptionPayload
}
